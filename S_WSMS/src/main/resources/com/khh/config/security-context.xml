<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<context:component-scan base-package="com.khh.security.." use-default-filters="false">
    	<context:include-filter expression="org.springframework.stereotype.Service" type="annotation" />
    	<context:include-filter expression="org.springframework.stereotype.Repository" type="annotation" />
    </context:component-scan>
	
	<http auto-config="true" use-expressions="true" >
		<access-denied-handler ref="accessFailureHandler" />
		<form-login 
			login-page="/"
			username-parameter="USER_ID"
			password-parameter="USER_PASSWORD"
			authentication-success-handler-ref="loginSuccessHandler"
			authentication-failure-handler-ref="loginFailHandler"
			default-target-url="/Login"
			always-use-default-target="false"
		/>
		
		<logout 
			invalidate-session="true"
			logout-success-url="/schedule"
			logout-url="/logout"
		/>										
	</http>
	
	<beans:bean id="accessFailureHandler" class="com.khh.tag.User.AccessFailureHandler">
		<beans:property name="errorPage" value="/403"/>
	</beans:bean>
	
	<beans:bean id="loginSuccessHandler" class="com.khh.security.LoginSuccessHandler" />
	<beans:bean id="loginFailHandler" class="com.khh.security.LoginFailHandler" >
		<beans:property name="defaultFailureUrl" value="/Login?error=true"/>
	</beans:bean>
	
	<beans:bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" id="passwordEncoder" />
	
	<beans:bean id="userLoginService" class="com.khh.User.Service.UserLoginService" />
	<beans:bean id="customAuthenticationProvider" class="com.khh.security.CustomAuthenticationProvider" />
	<beans:bean id="userDao" class="com.khh.User.Dao.UserDaoImpl" />
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="customAuthenticationProvider" />
		<authentication-provider user-service-ref="userLoginService">
			<password-encoder ref="passwordEncoder">
				<salt-source ref="saltSource" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="username"/>
	</beans:bean>
</beans:beans>